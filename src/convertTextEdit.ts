import { TextEdit } from "vscode";
import { TextEdit as LSTextEdit } from "vscode-html-languageservice";
import { convertRange } from "./convertRange";

/**
 * Converts a text edit object from the HTML language service format
 * ({@link LSTextEdit}) into a VS Code API {@link TextEdit}.
 *
 * Both types represent an edit operation on a document, consisting of:
 * - A target {@link Range} where text should be replaced.
 * - The `newText` string to insert.
 *
 * The `vscode-html-languageservice` uses plain object structures, while
 * the VS Code API requires actual {@link TextEdit} instances.
 *
 * This utility adapts the format so edits generated by the HTML language
 * service can be directly applied through VS Code APIs (e.g., workspace
 * edits, code actions, or formatting).
 *
 * @param edit - A {@link LSTextEdit} object containing a `range` (in LSP
 *               format) and a `newText` string.
 *
 * @returns A new VS Code {@link TextEdit} instance with an equivalent range
 *          and replacement text.
 *
 * @example
 * ```ts
 * import { TextEdit as LSTextEdit } from "vscode-html-languageservice";
 *
 * const lsEdit: LSTextEdit = {
 *   range: {
 *     start: { line: 0, character: 0 },
 *     end: { line: 0, character: 5 }
 *   },
 *   newText: "Hello"
 * };
 *
 * const vsEdit = convertTextEdit(lsEdit);
 * console.log(vsEdit.newText); // "Hello"
 * ```
 */
export const convertTextEdit = ({ range, newText }: LSTextEdit) =>
  new TextEdit(convertRange(range), newText);
